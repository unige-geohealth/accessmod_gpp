#0 building with "mx_builder" instance using docker-container driver

#1 [internal] load .dockerignore
#1 transferring context: 2B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 496B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/r-base:4.4.1
#3 ...

#4 [auth] library/r-base:pull token for registry-1.docker.io
#4 DONE 0.0s

#3 [internal] load metadata for docker.io/library/r-base:4.4.1
#3 DONE 1.1s

#5 [1/5] FROM docker.io/library/r-base:4.4.1@sha256:5c9f320ff22ccf261d4121a4f6737a1d487f53a391921ebed37608c12ef2628e
#5 resolve docker.io/library/r-base:4.4.1@sha256:5c9f320ff22ccf261d4121a4f6737a1d487f53a391921ebed37608c12ef2628e 0.0s done
#5 DONE 0.0s

#6 [2/5] RUN apt-get update && apt-get install -y     build-essential     libcurl4-openssl-dev     libssl-dev     libxml2-dev     && rm -rf /var/lib/apt/lists/*
#6 CACHED

#7 [3/5] RUN R -e "install.packages('pak')"
#7 CACHED

#8 [4/5] RUN R -e "pak::pkg_install(c(    'unige-geohealth/inAccessMod@438473e',    'doParallel',    'snow',    'foreach',    'purrr',    'dplyr',    'sf',    'terra'))"
#8 CACHED

#9 [5/5] WORKDIR /run
#9 DONE 0.0s

#10 exporting to oci image format
#10 exporting layers 0.0s done
#10 exporting manifest sha256:0d192bf640525d1f79dec3203c38061c6f0e27cce76ce3338b048da1fdb2ca62 done
#10 exporting config sha256:8b7f4655f79b4c57fdb43853e416e5360af63a3ec33e8578436924aae3186e43 done
#10 sending tarball
#10 ...

#11 importing to docker
#11 loading layer 5f70bf18a086 32B / 32B 0.1s done
#11 DONE 0.1s

#10 exporting to oci image format
#10 sending tarball 17.3s done
#10 DONE 17.4s

What's Next?
  View a summary of image vulnerabilities and recommendations â†’ docker scout quickview
